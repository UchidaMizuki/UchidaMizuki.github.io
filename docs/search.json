[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I am a classical music lover."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "UchidaMizuki",
    "section": "",
    "text": "ioanalysis\n\n\nR\n\n\nJapanese\n\n\n\n\n\n\n\n\n\n\n\nMay 31, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/ioanalysis-in-r-ja/ioanalysis-in-r-ja.html",
    "href": "posts/ioanalysis-in-r-ja/ioanalysis-in-r-ja.html",
    "title": "🗾Rで産業連関分析",
    "section": "",
    "text": "産業連関分析は，経済波及効果の算出に広く用いられている分析手法です． 日本では，国や都道府県によって，約5年に1度，産業連関表と呼ばれる統計データが 作成・公開されており，産業連関分析における基礎データとなっています．\nこれまで，産業連関分析では，Excel・VBAが用いられることが多かったようです．\n一方で，近年は，Python・R・Juliaなどのプログラミング言語の普及が進んでいます． これらのプログラミング言語は以下のような特長を持っています．\nそのため今後は，産業連関分析においても，これらのプログラミング言語の利用が 進むのではないかと思われます．\nここでは，Rを用いて産業連関分析を行います． Rでは近年，tidyverseなどモダンなデータ分析を行うためのパッケージが 多く提供されており，プログラミング初心者でも習得しやすい言語であると思います．\n産業連関表として，e-Statのデータベースで公開されている日本（国）の 2013年・13部門産業連関表を用います． ここで使用するデータは， こちら からダウンロードできます．"
  },
  {
    "objectID": "posts/ioanalysis-in-r-ja/ioanalysis-in-r-ja.html#産業連関分析の基礎",
    "href": "posts/ioanalysis-in-r-ja/ioanalysis-in-r-ja.html#産業連関分析の基礎",
    "title": "🗾Rで産業連関分析",
    "section": "産業連関分析の基礎",
    "text": "産業連関分析の基礎\n産業連関分析は一般的に以下の流れに従って行われます．\n\n産業連関表の整形\n投入係数行列の算出\nレオンチェフ逆行列の算出\n経済波及効果の算出\n\nまず，産業連関分析において重要な投入係数行列・レオンチェフ逆行列・経済波及効果の算出方法について解説します．\n\n投入係数行列とは\n投入係数は，産業の「クッキングレシピ」として呼ばれており，産業\\(j\\)の生産物を1単位生産するのに必要な産業\\(i\\)の生産物の量を表すものです．具体的には，以下のように中間投入\\(x_{ij}\\)を生産額\\(X_j\\)（産出額）で割ることで算出できます．\n\\[\na_{ij}=\\frac{x_{ij}}{X_j}\n\\]\n産業連関分析では，「クッキングレシピ」に相当する投入係数\\(a_{ij}\\)に基づく生産額のバランス式（行方向）を連立方程式として解きます．そこで，以下のように，投入係数行列（通常，\\(A\\)と表される）と呼ばれる行列を作成することで，連立方程式が簡単に解けるようになります．\n\\[\nA = \\begin{pmatrix}\n  a_{11} & \\cdots & a_{1n} \\\\\n  \\vdots & \\ddots & \\vdots \\\\\n  a_{n1} & \\cdots & a_{nn} \\\\\n\\end{pmatrix}\n\\]\n\n\nレオンチェフ逆行列による経済波及効果の推計について\n生産額のバランス式（行方向）は，行列を用いて以下のように表せます．変数の意味は以下の表の通りです．\n\\[\nAX + F + E - M = X\n\\]\n\n\n\n変数\n意味\n\n\n\n\n\\(A\\)\n投入係数行列\n\n\n\\(X = (X_1, \\cdots, X_n) ^ \\top\\)\n生産額ベクトル\n\n\n\\(F = (F_1, \\cdots, F_n) ^ \\top\\)\n最終需要ベクトル\n\n\n\\(E = (E_1, \\cdots, E_n) ^ \\top\\)\n移輸出ベクトル\n\n\n\\(M = (M_1, \\cdots, M_n) ^ \\top\\)\n移輸入ベクトル\n\n\n\n経済波及効果の推計では，最終需要の変化が生産額に与える波及効果を算出します．\n特に，日本の産業連関表での経済波及効果の推計では，移輸入\\(M\\)の扱いに注意が必要です（これは，日本表の多くが競争移輸入型表と呼ばれる形式を採用しており，投入係数に移輸入分が含まれているためです）．\n最終需要による経済波及効果は，域内の生産額だけでなく域外からの移輸入を誘発すると考えられます．この効果を無視すると経済波及効果を過大評価することにつながるため，通常，投入係数から移輸入相当分を差し引くという処理が行われます．\n移輸入は域内需要におおよそ比例すると考えられるため，以下のように，移輸入係数\\(\\hat{M_i}\\)が算出できます．\n\\[\n\\hat{M_i} = \\frac{M_i}{\\sum_{j}a_{ij}X_j + F_i}\n\\]\nさらに，行列での計算に適した移輸入係数行列\\(\\hat{M}\\)が，以下のように定義されます．\n\\[\n\\hat{M} =\n\\begin{pmatrix}\n  \\hat{M_1} & & 0 \\\\\n  & \\ddots & \\\\\n  0 & & \\hat{M_n} \\\\\n\\end{pmatrix}\n\\]\n以上より，生産額のバランス式（行方向）は，移輸入係数行列\\(\\hat{M}\\)を用いて，以下のように変形されます．ただし，\\(I\\)は単位行列（対角成分が1，それ以外が0の正方行列）です．\n\\[\n\\begin{align}\n  AX + F + E - \\hat{M} (AX + F) &= X \\\\\n  (I - \\hat{M}) (AX + F) + E &= X\n\\end{align}\n\\]\n上のバランス式より，経済波及効果の算出式が，以下のように導出されます．ここで，\\(\\Delta X\\)，\\(\\Delta F\\)は，それぞれ，生産額の変化量，最終需要の変化量です．\n\\[\n\\begin{align}\n  X &= (I - \\hat{M}) (AX + F) + E \\\\\n  [I - (I - \\hat{M}) A] X &= (I - \\hat{M}) F + E \\\\\n  X &= [I - (I - \\hat{M}) A] ^ {-1} [(I - \\hat{M}) F + E] \\\\\n  \\Delta X &= [I - (I - \\hat{M}) A] ^ {-1} (I - \\hat{M}) \\Delta F\n\\end{align}\n\\]\n生産額の変化量\\(\\Delta X\\)の式の右辺の\\((I - \\hat{M}) \\Delta F\\)は，最終需要の変化量に自給率\\(I - \\hat{M}\\)を掛けた値となっています．\nまた，\\([I - (I - \\hat{M}) A] ^ {-1}\\)は，最終需要の変化による直接・間接の波及効果を表す行列であり（開放型または競争移輸入型の）レオンチェフ逆行列と呼ばれています．\n以上のように，最終需要の変化量\\(\\Delta F\\)から生産額の変化量\\(\\Delta X\\)を推計するというのが，最も一般的な産業連関分析の方法となっています．"
  },
  {
    "objectID": "posts/ioanalysis-in-r-ja/ioanalysis-in-r-ja.html#rによる産業連関分析",
    "href": "posts/ioanalysis-in-r-ja/ioanalysis-in-r-ja.html#rによる産業連関分析",
    "title": "🗾Rで産業連関分析",
    "section": "Rによる産業連関分析",
    "text": "Rによる産業連関分析\n\n産業連関表の整形\nここでは， こちら からダウンロードできる日本の2011年の3部門表（iotable_3sector_2011_wider.csv）を使用します．\nこちらの表は，以下のように，日本の2011年の13部門表より作成したもので，単位は「百万円」です．\n\n13部門の産業分類を第1次・第2次・第3次産業に集計（注：「分類不明」を第3次産業に分類）\n付加価値部門を1部門に集計\n最終需要部門を域内最終需要（finaldemand）・輸出（export）・輸入（import）の3部門に集計\n\n産業連関表のデータ形式は，e-Statのデータベースで提供されている表などを除いて， 行に投入部門（input）・列に産出部門（output）を持つ「横長データ」であることが多いと思われます．\nここでも，以下の通り，まずは横長の産業連関表データを読み込みます．\n\nlibrary(tidyverse)\n\niotable_wider <- read_csv(\"iotable_3sector_2011_wider.csv\",\n                          col_types = cols(.default = \"c\")) |> \n  \n  # input (投入) 列以外を数値に変換\n  mutate(across(!input, parse_number))\n\nknitr::kable(iotable_wider)\n\n\n\n\n\n\n\n\n\n\n\n\n\ninput\nindustry/01_primary\nindustry/02_secondary\nindustry/03_tertiary\nfinaldemand/04_finaldemand\nexport/05_export\nimport/06_import\n\n\n\n\nindustry/01_primary\n1456611\n7850628\n1373767\n3869875\n47890\n-2562809\n\n\nindustry/02_secondary\n2715710\n161897553\n62841827\n132924323\n54473273\n-71673715\n\n\nindustry/03_tertiary\n2025270\n66811645\n155796589\n352324555\n16423417\n-8921553\n\n\nvalueadded/04_valueadded\n5838371\n106619145\n364447740\nNA\nNA\nNA\n\n\n\n\n\nデータ分析においては，「横長データ」よりも，以下のような「縦長データ」のほうが， 分析しやすい場合が多くあります． ここでも，横長の産業連関表を「縦長データ」に変換します．\n\niotable <- iotable_wider |>\n  \n  # input (投入) 列を分類・名称に分割\n  separate(input, c(\"input_type\", \"input_name\"),\n           sep = \"/\") |>\n  \n  # input (投入) と同様にoutput (産出) の分類・名称列を追加し縦長データに\n  pivot_longer(!c(input_type, input_name),\n               names_to = c(\"output_type\", \"output_name\"),\n               names_sep = \"/\",\n               values_to = \"value_M\") |>\n  \n  # 数値が存在しない行を削除\n  drop_na(value_M)\n\nknitr::kable(iotable)\n\n\n\n\ninput_type\ninput_name\noutput_type\noutput_name\nvalue_M\n\n\n\n\nindustry\n01_primary\nindustry\n01_primary\n1456611\n\n\nindustry\n01_primary\nindustry\n02_secondary\n7850628\n\n\nindustry\n01_primary\nindustry\n03_tertiary\n1373767\n\n\nindustry\n01_primary\nfinaldemand\n04_finaldemand\n3869875\n\n\nindustry\n01_primary\nexport\n05_export\n47890\n\n\nindustry\n01_primary\nimport\n06_import\n-2562809\n\n\nindustry\n02_secondary\nindustry\n01_primary\n2715710\n\n\nindustry\n02_secondary\nindustry\n02_secondary\n161897553\n\n\nindustry\n02_secondary\nindustry\n03_tertiary\n62841827\n\n\nindustry\n02_secondary\nfinaldemand\n04_finaldemand\n132924323\n\n\nindustry\n02_secondary\nexport\n05_export\n54473273\n\n\nindustry\n02_secondary\nimport\n06_import\n-71673715\n\n\nindustry\n03_tertiary\nindustry\n01_primary\n2025270\n\n\nindustry\n03_tertiary\nindustry\n02_secondary\n66811645\n\n\nindustry\n03_tertiary\nindustry\n03_tertiary\n155796589\n\n\nindustry\n03_tertiary\nfinaldemand\n04_finaldemand\n352324555\n\n\nindustry\n03_tertiary\nexport\n05_export\n16423417\n\n\nindustry\n03_tertiary\nimport\n06_import\n-8921553\n\n\nvalueadded\n04_valueadded\nindustry\n01_primary\n5838371\n\n\nvalueadded\n04_valueadded\nindustry\n02_secondary\n106619145\n\n\nvalueadded\n04_valueadded\nindustry\n03_tertiary\n364447740\n\n\n\n\n\n上で構築した表データは，各行のフィルタリングなどが容易にできる一方で， 産業連関分析に用いられる行列計算などに適していません．\nそこで，表データの基本的な演算と行列計算を同時に行えるdibbleパッケージを用います． 以下のように，産業連関表をdibbleに変換します．\n\n# pak::pak(\"UchidaMizuki/dibble\")\nlibrary(dibble)\n\niotable <- iotable |>\n  dibble_by(input = c(input_type, input_name),\n            output = c(output_type, output_name),\n            \n            # \"_\"で列名を分割してinput (投入)・output (産出) 軸を設定\n            .names_sep = \"_\")\n\niotable\n\n# A dibble:   24 x 1\n# Dimensions: input [4], output [6]\n# Measures:   value_M\n   input$type $name        output$type $name            value_M\n   <chr>      <chr>        <chr>       <chr>              <dbl>\n 1 industry   01_primary   industry    01_primary       1456611\n 2 industry   01_primary   industry    02_secondary     7850628\n 3 industry   01_primary   industry    03_tertiary      1373767\n 4 industry   01_primary   finaldemand 04_finaldemand   3869875\n 5 industry   01_primary   export      05_export          47890\n 6 industry   01_primary   import      06_import       -2562809\n 7 industry   02_secondary industry    01_primary       2715710\n 8 industry   02_secondary industry    02_secondary   161897553\n 9 industry   02_secondary industry    03_tertiary     62841827\n10 industry   02_secondary finaldemand 04_finaldemand 132924323\n# … with 14 more rows\n\n\n\n\n投入係数行列の算出\n産業の「クッキングレシピ」と呼ばれる投入係数行列\\(A\\)を以下のように中間投入を生産額で割って算出します．\n注：dibbleではブロードキャストが自動で行われますが，安全のため，ブロードキャストを行う際に，警告を発するように設計されています．そのため，broadcast()でブロードキャスト後の軸名c(\"input\", \"output\")を与えて警告が出ないようにする必要があります．\n\n# 生産額\ntotal_input <- iotable |>\n  filter(output$type == \"industry\") |>\n  apply(\"output\", sum)\n\n# 中間投入\ninterindustry <- iotable |>\n  filter(input$type == \"industry\",\n         output$type == \"industry\")\n\n# 投入係数\ninput_coeff <- broadcast(interindustry / total_input,\n                         c(\"input\", \"output\"))\n\ninput_coeff\n\n# A dibble:   9\n# Dimensions: input [3], output [3]\n  input$type $name        output$type $name              .\n  <chr>      <chr>        <chr>       <chr>          <dbl>\n1 industry   01_primary   industry    01_primary   0.121  \n2 industry   01_primary   industry    02_secondary 0.0229 \n3 industry   01_primary   industry    03_tertiary  0.00235\n4 industry   02_secondary industry    01_primary   0.226  \n5 industry   02_secondary industry    02_secondary 0.472  \n6 industry   02_secondary industry    03_tertiary  0.108  \n7 industry   03_tertiary  industry    01_primary   0.168  \n8 industry   03_tertiary  industry    02_secondary 0.195  \n9 industry   03_tertiary  industry    03_tertiary  0.267  \n\n\n\n\nレオンチェフ逆行列の算出\n経済波及効果を表すレオンチェフ逆行列は以下のように，移輸入係数と投入係数を用いて算出できます．\n注：solve()で逆行列を算出すると行列の軸名が入れ替わるため注意してください．\n\n# 域内需要\nlocal_demand <- iotable |>\n  filter(input$type == \"industry\",\n         !output$type %in% c(\"export\", \"import\")) |>\n  apply(\"input\", sum)\n\n# (移) 輸入\nimport <- iotable |>\n  filter(input$type == \"industry\",\n         output$type == \"import\") |>\n  apply(\"input\", sum)\n# 符号を正に\nimport <- -import\n\n# (移) 輸入係数\nimport_coeff <- import / local_demand\n\nI <- eye(input_coeff) # 単位行列\nM <- import_coeff     # 移輸入係数ベクトル (broadcastが行われるため行列でなくてよい)\nA <- input_coeff      # 投入係数行列\n\n# レオンチェフ逆行列\nleontiefinv <- broadcast(I - (1 - M) * A,\n                         c(\"input\", \"output\")) |>\n  solve()\n\nleontiefinv\n\n# A dibble:   9\n# Dimensions: output [3], input [3]\n  output$type $name        input$type $name              .\n  <chr>       <chr>        <chr>      <chr>          <dbl>\n1 industry    01_primary   industry   01_primary   1.12   \n2 industry    01_primary   industry   02_secondary 0.0361 \n3 industry    01_primary   industry   03_tertiary  0.00716\n4 industry    02_secondary industry   01_primary   0.374  \n5 industry    02_secondary industry   02_secondary 1.68   \n6 industry    02_secondary industry   03_tertiary  0.197  \n7 industry    03_tertiary  industry   01_primary   0.348  \n8 industry    03_tertiary  industry   02_secondary 0.445  \n9 industry    03_tertiary  industry   03_tertiary  1.41   \n\n\n\n\n経済波及効果の算出\nこちら からダウンロードできる最終需要がそれぞれ百万円ずつ増加する（finaldemand_change_3sector.csv）ケースで経済波及効果を算出しています．\n\n# 最終需要変化量\nfinaldemand_change <- read_csv(\"finaldemand_change_3sector.csv\",\n                               col_types = cols(.default = \"c\",\n                                                value_M = \"n\")) |> \n  dibble_by(input = c(input_type, input_name),\n            .names_sep = \"_\")\n\nL <- leontiefinv         # レオンチェフ逆行列\nM <- import_coeff        # 移輸入係数\nFD <- finaldemand_change # 最終需要変化量\n\n# 経済波及効果\nspillover <- L %*% ((1 - M) * FD)\n\nspillover\n\n# A dibble:   3\n# Dimensions: output [3]\n  output$type $name            .\n  <chr>       <chr>        <dbl>\n1 industry    01_primary   0.958\n2 industry    02_secondary 1.85 \n3 industry    03_tertiary  2.03 \n\nspillover |> \n  as_tibble(n = \"value_M\") |> \n  unpack(output, \"_\") |> \n  ggplot(aes(output_name, value_M)) +\n  geom_col()"
  },
  {
    "objectID": "posts/ioanalysis-in-r-ja/ioanalysis-in-r-ja.html#まとめ",
    "href": "posts/ioanalysis-in-r-ja/ioanalysis-in-r-ja.html#まとめ",
    "title": "🗾Rで産業連関分析",
    "section": "まとめ",
    "text": "まとめ\nRを用いた産業連関分析の方法について紹介しました．\nここまでの計算を，jpioにパッケージ形式でまとめました．以下のように，ここまでの計算と同様の計算を行うことができます．\n\n# pak::pak(\"UchidaMizuki/jpio\")\n\n# 産業連関表\niotable <- read_csv(\"iotable_3sector_2011.csv\",\n                    col_types = cols(.default = \"c\",\n                                     value_M = \"n\")) |> \n  jpio::as_iotable()\n\niotable\n\n# A dibble:   24\n# Dimensions: input [4], output [6]\n   input$type $name        output$type $name                  .\n   <fct>      <chr>        <fct>       <chr>              <dbl>\n 1 industry   01_primary   industry    01_primary       1456611\n 2 industry   01_primary   industry    02_secondary     7850628\n 3 industry   01_primary   industry    03_tertiary      1373767\n 4 industry   01_primary   finaldemand 04_finaldemand   3869875\n 5 industry   01_primary   export      05_export          47890\n 6 industry   01_primary   import      06_import       -2562809\n 7 industry   02_secondary industry    01_primary       2715710\n 8 industry   02_secondary industry    02_secondary   161897553\n 9 industry   02_secondary industry    03_tertiary     62841827\n10 industry   02_secondary finaldemand 04_finaldemand 132924323\n# … with 14 more rows\n\n# 投入係数\njpio::input_coeff(iotable)\n\n# A dibble:   9\n# Dimensions: input [3], output [3]\n  input$type $name        output$type $name              .\n  <fct>      <chr>        <fct>       <chr>          <dbl>\n1 industry   01_primary   industry    01_primary   0.121  \n2 industry   01_primary   industry    02_secondary 0.0229 \n3 industry   01_primary   industry    03_tertiary  0.00235\n4 industry   02_secondary industry    01_primary   0.226  \n5 industry   02_secondary industry    02_secondary 0.472  \n6 industry   02_secondary industry    03_tertiary  0.108  \n7 industry   03_tertiary  industry    01_primary   0.168  \n8 industry   03_tertiary  industry    02_secondary 0.195  \n9 industry   03_tertiary  industry    03_tertiary  0.267  \n\n# レオンチェフ逆行列\njpio::leontief_inv(iotable)\n\n# A dibble:   9\n# Dimensions: output [3], input [3]\n  output$type $name        input$type $name              .\n  <fct>       <chr>        <fct>      <chr>          <dbl>\n1 industry    01_primary   industry   01_primary   1.12   \n2 industry    01_primary   industry   02_secondary 0.0361 \n3 industry    01_primary   industry   03_tertiary  0.00716\n4 industry    02_secondary industry   01_primary   0.374  \n5 industry    02_secondary industry   02_secondary 1.68   \n6 industry    02_secondary industry   03_tertiary  0.197  \n7 industry    03_tertiary  industry   01_primary   0.348  \n8 industry    03_tertiary  industry   02_secondary 0.445  \n9 industry    03_tertiary  industry   03_tertiary  1.41   \n\n# 経済波及効果\njpio::spillover_effect(iotable,\n                       list(`01_primary` = 1,\n                            `02_secondary` = 1,\n                            `03_tertiary` = 1))\n\n# A dibble:   3\n# Dimensions: output [3]\n  output$type $name            .\n  <fct>       <chr>        <dbl>\n1 industry    01_primary   0.958\n2 industry    02_secondary 1.85 \n3 industry    03_tertiary  2.03"
  }
]